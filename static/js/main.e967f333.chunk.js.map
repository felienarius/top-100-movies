{"version":3,"sources":["components/MoviesList.module.css","components/layout/MainNavigation.tsx","components/Movie.tsx","components/MoviesList.tsx","pages/Favorites.tsx","pages/Top100Movies.tsx","App.tsx","index.tsx","components/Movie.module.css"],"names":["module","exports","MainNavigation","className","exact","to","Movie","props","useState","showDescription","setShowDescription","movie","styles","menuItem","expanded","isFavorite","favorite","onClick","prevShowDescription","itemNumber","number","itemCover","src","imageBig","alt","title","height","itemInfo","director","category","releaseDate","description","favorites","e","stopPropagation","setFavorite","id","MoviesList","isEmpty","movies","length","classes","section","children","map","index","FavoritesPage","Top100MoviesPage","App","loadedMovies","setLoadedMovies","hasError","setHasError","errorMessage","setErrorMessage","checkForError","response","ok","Error","statusText","json","value","newMovie","filter","tmpMovies","useEffect","console","log","fetch","then","data","entries","feed","entry","attributes","label","rights","imageSmall","summary","push","catch","error","path","Top100Movies","Favorites","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e967f333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"MoviesList_section__32F-i\",\"title\":\"MoviesList_title__IimcN\"};","import { NavLink } from \"react-router-dom\";\r\nimport \"./MainNavigation.css\";\r\n\r\nfunction MainNavigation() {\r\n  return (\r\n    <header className=\"nav\">\r\n      <nav className=\"wrapper\">\r\n        <NavLink exact to=\"/top-100-movies/\" className=\"nav-link\">\r\n          Top&nbsp;100&nbsp;iTunes&nbsp;Movies\r\n        </NavLink>\r\n        <NavLink to=\"/top-100-movies/favorites\" className=\"nav-link nav-right\">\r\n          Favorites\r\n        </NavLink>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import { useState } from \"react\";\r\nimport styles from \"./Movie.module.css\";\r\n\r\nexport interface MovieData {\r\n  id: number;\r\n  isFavorite: boolean;\r\n  title: string;\r\n  rights: string;\r\n  imageSmall: string;\r\n  imageBig: string;\r\n  description: string;\r\n  director: string;\r\n  category: string;\r\n  releaseDate: string;\r\n}\r\n\r\nfunction Movie(props: { movie: MovieData; number: number; setFavorite: any }) {\r\n  const [showDescription, setShowDescription] = useState(false);\r\n  const { movie } = props;\r\n\r\n  function onClick() {\r\n    setShowDescription((prevShowDescription) => !prevShowDescription);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.menuItem} ${\r\n        showDescription ? styles.expanded : \"\"\r\n      } ${props.movie.isFavorite ? styles.favorite : \"\"}`}\r\n      onClick={onClick}\r\n    >\r\n      <div className={styles.itemNumber}>\r\n        <p>{props.number}</p>\r\n      </div>\r\n      <div className={styles.itemCover}>\r\n        <img src={movie.imageBig} alt={movie.title} height=\"170\" />\r\n      </div>\r\n      <div className={styles.itemInfo}>\r\n        <h3>{movie.title}</h3>\r\n        <p>Director: {movie.director}</p>\r\n        <p>Category: {movie.category}</p>\r\n        <p>Release Date: {movie.releaseDate}</p>\r\n        {showDescription ? (\r\n          <p className={styles.description}>\r\n            <small>{movie.description}</small>\r\n          </p>\r\n        ) : null}\r\n      </div>\r\n      <button\r\n        className={styles.favorites}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          props.setFavorite(props.movie.id, !props.movie.isFavorite);\r\n        }}\r\n      >\r\n        {movie.isFavorite ? \"Remove from favorites\" : \"Add to favorites\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import { FunctionComponent } from \"react\";\r\nimport Movie from \"./Movie\";\r\nimport { MovieData } from \"./Movie\";\r\nimport classes from \"./MoviesList.module.css\";\r\n\r\ninterface MoviesListProps {\r\n  title: string;\r\n  movies: MovieData[];\r\n  setFavorite: (id: number, value: boolean) => void;\r\n}\r\n\r\nconst MoviesList: FunctionComponent<MoviesListProps> = (props) => {\r\n  const isEmpty = props.movies.length === 0;\r\n\r\n  return (\r\n    <section className={classes.section}>\r\n      <h1 className={classes.title}>{props.title}</h1>\r\n      {props.children ? props.children : null}\r\n      {isEmpty ? (\r\n        <p>No results</p>\r\n      ) : (\r\n        props.movies.map((movie, index) => (\r\n          <Movie\r\n            key={movie.id}\r\n            movie={movie}\r\n            number={index + 1}\r\n            setFavorite={props.setFavorite}\r\n          />\r\n        ))\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import { MovieData } from \"../components/Movie\";\r\nimport MoviesList from \"../components/MoviesList\";\r\n\r\nfunction FavoritesPage(props: {\r\n  movies: MovieData[];\r\n  setFavorite: (id: number, value: boolean) => void;\r\n}) {\r\n  return <MoviesList\r\n  title=\"My favorite movies\"\r\n  movies={props.movies}\r\n  setFavorite={props.setFavorite}\r\n/>\r\n}\r\n\r\nexport default FavoritesPage;\r\n","import { MovieData } from \"../components/Movie\";\r\nimport MoviesList from \"../components/MoviesList\";\r\n\r\nfunction Top100MoviesPage(props: {\r\n  movies: MovieData[];\r\n  setFavorite: (id: number, value: boolean) => void;\r\n}) {\r\n  return (\r\n    <MoviesList\r\n      title=\"Top 100 movies\"\r\n      movies={props.movies}\r\n      setFavorite={props.setFavorite}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Top100MoviesPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\n\r\nimport { MovieData } from \"./components/Movie\";\r\nimport MainNavigation from \"./components/layout/MainNavigation\";\r\nimport FavoritesPage from \"./pages/Favorites\";\r\nimport Top100MoviesPage from \"./pages/Top100Movies\";\r\nimport \"./App.css\";\r\n\r\ninterface Entry {\r\n  id: { attributes: { \"im:id\": number } };\r\n  \"im:name\": { label: string };\r\n  rights?: { label: string };\r\n  \"im:image\": { label: string }[];\r\n  summary: { label: string };\r\n  \"im:artist\": { label: string };\r\n  category: { attributes: { label: string } };\r\n  \"im:releaseDate\": { attributes: { label: string } };\r\n}\r\n\r\nfunction App() {\r\n  const [loadedMovies, setLoadedMovies] = useState([] as MovieData[]);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const checkForError = (response: Response) => {\r\n    if (!response.ok) throw Error(response.statusText);\r\n    return response.json();\r\n  };\r\n\r\n  const setFavorite = (id: number, value: boolean) => {\r\n    const newMovie = loadedMovies.filter((movie) => movie.id === id)[0];\r\n    newMovie.isFavorite = value;\r\n    const tmpMovies = loadedMovies.map((movie) =>\r\n      movie.id === id ? newMovie : movie\r\n    );\r\n    setLoadedMovies(tmpMovies);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"Fetching...\");\r\n    setHasError(false);\r\n    fetch(\"https://itunes.apple.com/us/rss/topmovies/limit=100/json\")\r\n      .then(checkForError)\r\n      .then((data) => {\r\n        const movies = [];\r\n        const entries = data.feed.entry as Entry[];\r\n\r\n        for (const entry of entries) {\r\n          const movie = {\r\n            id: entry.id.attributes[\"im:id\"],\r\n            title: entry[\"im:name\"].label,\r\n            rights: entry.rights ? entry.rights.label : \"\",\r\n            imageSmall: entry[\"im:image\"][0].label,\r\n            imageBig: entry[\"im:image\"][2].label,\r\n            description: entry.summary.label,\r\n            director: entry[\"im:artist\"].label,\r\n            category: entry.category.attributes.label,\r\n            releaseDate: entry[\"im:releaseDate\"].attributes.label,\r\n            isFavorite: false,\r\n          };\r\n\r\n          movies.push(movie);\r\n        }\r\n\r\n        setLoadedMovies(movies);\r\n      })\r\n      .catch((error) => {\r\n        setHasError(true);\r\n        setErrorMessage(error);\r\n      });\r\n  }, []);\r\n\r\n  if (hasError) {\r\n    return (\r\n      <section>\r\n        <h2>Ooops there was an error!</h2>\r\n        <p>{errorMessage}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <MainNavigation />\r\n      <div className=\"wrapper\">\r\n        <Switch>\r\n          <Route path=\"/top-100-movies/\" exact>\r\n            <Top100MoviesPage movies={loadedMovies} setFavorite={setFavorite}/>\r\n          </Route>\r\n          <Route path=\"/top-100-movies/favorites\" exact>\r\n            <FavoritesPage movies={loadedMovies.filter(movie => movie.isFavorite)} setFavorite={setFavorite}/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"Movie_menuItem__2crYu\",\"favorite\":\"Movie_favorite__25r8f\",\"itemNumber\":\"Movie_itemNumber__kv23f\",\"itemCover\":\"Movie_itemCover__3aBqP\",\"itemInfo\":\"Movie_itemInfo__38WsC\",\"description\":\"Movie_description__11hkx\",\"expand\":\"Movie_expand__32xTV\",\"expanded\":\"Movie_expanded__hQ87v\",\"favorites\":\"Movie_favorites__1xaNs\"};"],"sourceRoot":""}